using Units.Skills;
using UnityEngine;

namespace Units.Buffs
{
    /// <summary>
    /// 易伤Buff：受到攻击时额外承受伤害
    /// </summary>
    public class Vulnerability : Buff, IAfterTakeDamageTrigger
    {
        private float extraDamagePercent; // 额外伤害百分比

        /// <param name="buffDuration">Buff持续时间</param>
        /// <param name="extraDamagePercent">受到攻击时额外承受伤害百分比（如20表示+20%伤害）</param>
        /// <param name="sourceUnit">施加者</param>
        /// <param name="sourceSkill">来源技能</param>
        public Vulnerability(
            float buffDuration,
            float extraDamagePercent,
            Unit sourceUnit,
            Skill sourceSkill
        ) : base(buffDuration, sourceUnit, sourceSkill)
        {
            this.extraDamagePercent = extraDamagePercent;
        }

        public override string Name() => "易伤";
        public override string Description() =>
            $"受到伤害时额外承受{extraDamagePercent}%伤害";

        public void OnAfterTakeDamage(ref Damages.Damage damage)
        {
            if (damage.Type == Damages.DamageType.Hit ||
                damage.Type == Damages.DamageType.Skill)
            {

                float newValue = damage.Value * (extraDamagePercent / 100f);
                var extraDamage = new Damages.Damage(newValue, Units.Damages.DamageType.Extra);
                extraDamage.SetSourceUnit(damage.SourceUnit);
                extraDamage.SetTargetUnit(damage.TargetUnit);
                extraDamage.SetSourceLabel("易伤");

                damage.TargetUnit.TakeDamage(extraDamage);
            }
        }

    }
}